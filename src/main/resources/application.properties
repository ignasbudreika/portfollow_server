server.servlet.context-path=/api

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.show-sql=true
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true
spring.jpa.hibernate.ddl-auto=update

spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

spring.security.oauth2.client.registration.google.client-id=${OAUTH2_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH2_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${OAUTH2_GOOGLE_CLIENT_SCOPE}
spring.security.oauth2.client.registration.google.redirect_uri=${OAUTH2_GOOGLE_CLIENT_REDIRECT_URI}
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri:https://www.googleapis.com/oauth2/v3/certs

logging.level.com.github.ignasbudreika.portfollow=INFO
logging.level.com.google.api.client=INFO
logging.level.org.zalando.logbook: TRACE

cors.allowed.origin=${CORS_ALLOWED_ORIGIN}

http.client.alpha.vantage.base.url=${BASE_URL_ALPHA_VANTAGE}
http.client.alpha.vantage.api.key=${API_KEY_ALPHA_VANTAGE}
http.client.spectrocoin.oauth.url=${OAUTH_URL_SPECTROCOIN}
http.client.spectrocoin.oauth.scope=${OAUTH_SCOPE_SPECTROCOIN}
http.client.spectrocoin.oauth.version=${OAUTH_VERSION_SPECTROCOIN}
http.client.spectrocoin.wallet.url=${WALLET_URL_SPECTROCOIN}

web3j.http.service.url=${WEB3J_HTTP_SERVICE_URL}

encryption.database.column.key=${ENCRYPTION_KEY}
encryption.database.column.iv=${ENCRYPTION_IV}
encryption.database.column.algo=${ENCRYPTION_ALGORITHM}